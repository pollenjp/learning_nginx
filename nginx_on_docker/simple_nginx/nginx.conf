user nginx;

worker_processes 1;

error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
}

http {
    #########
    # types #
    #########
    # includeは設定ファイルの読み込み
    # nginxに添付されているMIMEタイプ割当の設定ファイルmime.types
    # typesディレクティブに一致する拡張子がないときdefault_typeで指定したMIMEタイプになる。
    include      mime.types;
    default_type application/octet-stream;

    #####################
    # ログフォーマットを指定
    #####################
    log_format main '$remote_addr - $remote_user [$time_local]\t' #
                    '"$request"\t'               # full original request line
                    '$status\t'                  # response status (1.3.2, 1.2.2)
                    '$body_bytes_sent\t'         # number of bytes sent to a client, not counting the response header
                    '"$http_referer"\t'          # $http_<field_name> : request header_value
                    '"$http_user_agent"\t'
                    '"$http_x_forwarded_for"';
    # labeled tab-separated values (ltsv)
    log_format ltsv 'time:$time_local\t'                    # 時間
                    'status:$status\t'                      # ステータス
                    'request_time:$request_time\t'          # リスエスト時間
                    'body_bytes_sent:$body_bytes_sent\t'
                                            # 送信したレスポンスボディサイズ
                    'remote_addr:$remote_addr\t'            # リモートアドレス
                    'request_method:$request_method\t'      # メソッド
                    'request_uri:$request_uri\t'            # リクエストURI
                    'protocol:$server_protocol\t'           # プロトコル
                    'http_referer:$http_referer\t'          # リファラ
                    'http_user_agent:$http_user_agent';     # ユーザエージェント
    access_log /var/log/nginx/access.log main;
    access_log /var/log/nginx/access-ltsv.log ltsv;

    sendfile      on;
    tcp_nopush    on;

    ######################
    # バーチャルサーバを用意
    ############################################################################
    # 優先順位
    # 1. listenディレクティブのアドレスとポートに一致するバーチャルサーバを検索
    # 2. リクエストのHostヘッダがserver_nameディレクティブで指定したホストに一致しているか
    # 3. それ以外ならデフォルトサーバにいく
    ############################################################################
    server {
        # アドレスとポート指定とホスト名の指定
        listen      *:80;
        server_name localhost default_server;

        # 公開するディレクトリを指定
        root    /usr/share/nginx/html;
        index   index.html index.htm;
    }

    server {
        listen      *:80;
        server_name www.example.com;

        # 公開するディレクトリを指定
        root  ./html2;
        index index.html index.htm;
    }
}

